# Installs the certificates to the Java instance

#
# OSX
#

- block:

  - name: '[JAVA] list existing certificates'
    shell: keytool -list -keystore `/usr/libexec/java_home`/{{ java_keystore_location }} -storepass changeit
    register: java_certificates

  - name: '[JAVA] transfer the certificate'
    copy: 
      src={{ item.file }}
      dest=/tmp/{{ item.file | basename }}
    with_items: "{{ certificate_files }}"
    when: item.alias not in java_certificates.stdout

  - name: '[JAVA] install certificates in the keystore'
    shell: keytool -import -trustcacerts -keystore `/usr/libexec/java_home`/{{ java_keystore_location }} -storepass changeit -noprompt -alias {{ item.alias }} -file "/tmp/{{ item.file | basename }}"
    with_items: "{{ certificate_files }}"
    when: item.alias not in java_certificates.stdout

  when: ansible_distribution=="MacOSX"

  always:
    - name: '[JAVA] cleaning certificates'
      file: 
        path="/tmp/{{ item.file | basename }}"
        state=absent
      with_items: "{{ certificate_files }}"

#
# Windows
#

- block:
  - name: '[JAVA] list existing certificates'
    win_shell: "bin\\keytool -list -keystore \"{{ java_home_windows.value }}/{{ java_keystore_location }}\" -storepass changeit"
    register: java_certificates
    args:
      chdir: '{{ java_home_windows.value }}'
      executable: cmd

  - name: '[JAVA] transfer the certificate'
    win_copy: 
      src={{ item.file }}
      dest="{{ ansible_env['TMP'] }}/{{ item.file | basename }}"
    with_items: "{{ certificate_files }}"
    when: item.alias not in java_certificates.stdout

  - name: '[JAVA] install certificates in the keystore'
    win_shell: "bin\\keytool -import -trustcacerts -keystore \"{{ java_home_windows.value }}/{{ java_keystore_location }}\" -storepass changeit -noprompt -alias {{ item.alias }} -file \"{{ ansible_env['TMP'] }}/{{ item.file | basename }}\""
    args:
      executable: cmd
      chdir: '{{ java_home_windows.value }}'
    with_items: "{{ certificate_files }}"
    when: item.alias not in java_certificates.stdout

  when: ansible_os_family=="Windows"

  always:
    - name: '[JAVA] cleaning certificates'
      win_file: 
        path="{{ ansible_env['TMP'] }}/{{ item.file | basename }}"
        state=absent
      with_items: "{{ certificate_files }}"
        
#
# UBUNTU
#

- block:

  - name: '[JAVA] check keytool'
    shell: PATH=$(dirname $(readlink -f $(which java))):$PATH keytool -help

  - name: '[JAVA] list existing certificates'
    shell: PATH=$(dirname $(readlink -f $(which java))):$PATH keytool -list -keystore {{java_installation_path}}/{{java_installation.folder}}/{{java_keystore_location}} -storepass changeit
    register: java_certificates
  
  - name: '[JAVA] transfer the certificate'
    copy: 
      src={{ item.file }}
      dest=/tmp/{{ item.file | basename }}
    with_items: "{{ certificate_files }}"
    when: item.alias not in java_certificates.stdout

  - name: '[JAVA] install certificates into the Java keystore'
    shell: PATH=$(dirname $(readlink -f $(which java))):$PATH keytool -import -trustcacerts -keystore {{java_installation_path}}/{{java_installation.folder}}/{{java_keystore_location}} -storepass changeit -noprompt -alias {{ item.alias }} -file "/tmp/{{ item.file | basename}}"
    with_items: "{{ certificate_files }}"
    when: item.alias not in java_certificates.stdout

  when: ansible_distribution=="Ubuntu"

  always:
    - name: '[JAVA] cleaning certificates'
      file: 
        path="/tmp/{{ item.file | basename }}" 
        state=absent
      with_items: "{{ certificate_files }}"
    
